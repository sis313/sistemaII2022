openapi: 3.0.3
info:
  title: Business API UCB
  description: _La función principal de esta API es controlar y manejar de manera correcta la información que se encuentra en la Base de Datos, cuando `Business` realicen consultas como de servicios de cada negocio, consulta de sucursales, agregar, editar, eliminar de un servicio de algo específico._

  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about API BUSSINES
  url: http://swagger.io
servers:
  - url: https://api/v1/business
tags:
  - name: business
    description: Todo acerca del acceso a business


paths:
  /business:
    post:
      tags:
        - business
      summary: Crear un nuevo negocio
      description: Agregar un nuevo Business
      operationId: addBussiness
      requestBody:
        description: Crear un nuevo Business
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessCreate'
          application/xml:
            schema:
              $ref: '#/components/schemas/BusinessCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessCreate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCreate'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessCreate'
        '405':
          description: Invalid input


  /business/:
    get:
      tags:
        - business
      summary: Encontrar todos los Negocios
      description: Se pueden proporcionar múltiples valores de estado con cadenas separadas por comas
      operationId: findAll

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business'
        '400':
          description: Invalid status value

  /business/{businessId}:
    get:
      tags:
        - business
      summary: Encontrar un negocio por ID
      description: Retorna un negocio
      operationId: getBusinessById
      parameters:
        - name: businessId
          in: path
          description: ID of Business to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
            application/xml:
              schema:
                $ref: '#/components/schemas/Business'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found

    put:
      tags:
        - business
      summary: Update business
      description: This can only be done by the logged in business.
      operationId: updateBusiness
      parameters:
        - name: businessId
          in: path
          description: businessId that need to be deleted
          required: true
          schema:
            type: integer
      requestBody:
        description: Update an existent business
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessCreate'
          application/xml:
            schema:
              $ref: '#/components/schemas/BusinessCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessCreate'
      responses:
        default:
          description: successful operation


  /business/{userId}:
    get:
      tags:
        - business
      summary: Encontrar un negocio por userID
      description: Retorna un negocio
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID of userID to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
            application/xml:
              schema:
                $ref: '#/components/schemas/Business'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found




    delete:
      tags:
        - business
      summary: Delete business
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found

components:
  schemas:
    BusinessCreate:
      type: object
      properties:

        name:
          type: string
          format: string
          example: 'business name'
        description:
          type: string
          format: string
          example: 'business description'
        idTypeBusiness:
          type: integer
          format: int64
          example: 198772
        idUser:
          type: integer
          format: int64
          example: 198772
        createDate:
          type: string
          format: date
          example: "2008-01-02"
        UpdateDate:
          type: string
          format: date
          example: "2008-01-02"
        status:
          type: integer
          format: int64
          example: 1
          enum:
            - 1
            - 2
            - 3

    Business:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          format: string
          example: 'business name'
        description:
          type: string
          format: string
          example: 'business description'
        idTypeBusiness:
          type: integer
          format: int64
          example: 198772
        idUser:
          type: integer
          format: int64
          example: 1
        createDate:
          type: string
          format: date
          example: "2008-01-02"
        status:
          type: integer
          format: int64
          example: 1
          enum:
            - 1
            - 2
            - 3